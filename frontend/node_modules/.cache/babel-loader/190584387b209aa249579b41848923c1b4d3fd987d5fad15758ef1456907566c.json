{"ast":null,"code":"var _jsxFileName = \"/Users/yanmeiri/Library/Mobile Documents/com~apple~CloudDocs/Bank/frontend/src/components/auth/NewLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, TextField, Button, Link } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { axiosi } from '../../config/Axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  // Toggle between Login (false) and Register (true)\n  const [showRegister, setShowRegister] = useState(false);\n  const navigate = useNavigate();\n\n  // ----- Login State -----\n  const [loginEmail, setLoginEmail] = useState('');\n  const [loginPassword, setLoginPassword] = useState('');\n  const [loginError, setLoginError] = useState('');\n\n  // ----- Register State -----\n  const [name, setName] = useState('');\n  const [regEmail, setRegEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [address, setAddress] = useState('');\n  const [registerError, setRegisterError] = useState('');\n\n  // ----- Handlers -----\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoginError('');\n    try {\n      const response = await axiosi.post('/auth/login', {\n        email: loginEmail,\n        password: loginPassword\n      });\n      if (response.status === 200) {\n        localStorage.setItem('username', response.data.user.name);\n        navigate('/account');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setLoginError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Invalid login credentials');\n    }\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    setRegisterError('');\n    if (password !== confirmPassword) {\n      setRegisterError('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await axiosi.post('/auth/register', {\n        name,\n        email: regEmail,\n        password,\n        phone,\n        address\n      });\n      if (response.status === 201) {\n        navigate('/login'); // Or toggle back to login if desired\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setRegisterError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Registration failed');\n    }\n  };\n  const togglePanel = () => {\n    setShowRegister(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative',\n      width: '100%',\n      minHeight: '100vh',\n      backgroundImage: 'url(https://source.unsplash.com/random/1600x900?banking)',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '50%',\n          position: 'relative',\n          // When login is active, place it above the overlay; when register is active, lower it.\n          zIndex: showRegister ? 1 : 3,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '80%',\n            maxWidth: 400,\n            backgroundColor: 'rgba(255,255,255,0.8)',\n            p: 4,\n            borderRadius: 3,\n            boxShadow: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              mb: 2,\n              textAlign: 'center'\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleLogin,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              variant: \"outlined\",\n              fullWidth: true,\n              margin: \"normal\",\n              type: \"email\",\n              value: loginEmail,\n              onChange: e => setLoginEmail(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Password\",\n              variant: \"outlined\",\n              fullWidth: true,\n              margin: \"normal\",\n              type: \"password\",\n              value: loginPassword,\n              onChange: e => setLoginPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), loginError && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"error\",\n              sx: {\n                mt: 2\n              },\n              children: loginError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              sx: {\n                mt: 2\n              },\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mt: 2,\n              textAlign: 'center'\n            },\n            children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n              onClick: togglePanel,\n              sx: {\n                cursor: 'pointer'\n              },\n              children: \"Register here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '50%',\n          position: 'relative',\n          // When register is active, place it above the overlay; when login is active, lower it.\n          zIndex: showRegister ? 3 : 1,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '80%',\n            maxWidth: 400,\n            backgroundColor: 'rgba(255,255,255,0.8)',\n            p: 4,\n            borderRadius: 3,\n            boxShadow: 5,\n            transition: '1s'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              mb: 2,\n              textAlign: 'center'\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleRegister,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Full Name\",\n              variant: \"outlined\",\n              fullWidth: true,\n              margin: \"normal\",\n              type: \"text\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              variant: \"outlined\",\n              fullWidth: true,\n              margin: \"normal\",\n              type: \"email\",\n              value: regEmail,\n              onChange: e => setRegEmail(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Password\",\n              variant: \"outlined\",\n              fullWidth: true,\n              margin: \"normal\",\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Confirm Password\",\n              variant: \"outlined\",\n              fullWidth: true,\n              margin: \"normal\",\n              type: \"password\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Phone\",\n              variant: \"outlined\",\n              fullWidth: true,\n              margin: \"normal\",\n              type: \"tel\",\n              value: phone,\n              onChange: e => setPhone(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Address\",\n              variant: \"outlined\",\n              fullWidth: true,\n              margin: \"normal\",\n              type: \"text\",\n              value: address,\n              onChange: e => setAddress(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), registerError && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"error\",\n              sx: {\n                mt: 2\n              },\n              children: registerError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              sx: {\n                mt: 2\n              },\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mt: 2,\n              textAlign: 'center'\n            },\n            children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n              onClick: togglePanel,\n              sx: {\n                cursor: 'pointer'\n              },\n              children: \"Login here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'absolute',\n        top: 0,\n        // When registering, place the overlay over the left (login) panel;\n        // otherwise, cover the right (register) panel.\n        left: showRegister ? 0 : '50%',\n        width: '50%',\n        height: '100%',\n        backgroundColor: 'rgba(55,78,232,0.99)',\n        transition: 'left 0.7s ease-in-out',\n        zIndex: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthPage, \"NBpNgLu5UcJrtDhGiyTm8irww5k=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","Box","Typography","TextField","Button","Link","useNavigate","axiosi","jsxDEV","_jsxDEV","AuthPage","_s","showRegister","setShowRegister","navigate","loginEmail","setLoginEmail","loginPassword","setLoginPassword","loginError","setLoginError","name","setName","regEmail","setRegEmail","password","setPassword","confirmPassword","setConfirmPassword","phone","setPhone","address","setAddress","registerError","setRegisterError","handleLogin","e","preventDefault","response","post","email","status","localStorage","setItem","data","user","err","_err$response","_err$response$data","message","handleRegister","_err$response2","_err$response2$data","togglePanel","prev","sx","position","width","minHeight","backgroundImage","backgroundSize","backgroundPosition","children","display","height","zIndex","justifyContent","alignItems","maxWidth","backgroundColor","p","borderRadius","boxShadow","variant","mb","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","fullWidth","margin","type","value","onChange","target","required","color","mt","onClick","cursor","transition","top","left","_c","$RefreshReg$"],"sources":["/Users/yanmeiri/Library/Mobile Documents/com~apple~CloudDocs/Bank/frontend/src/components/auth/NewLogin.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n    Box,\n    Typography,\n    TextField,\n    Button,\n    Link,\n} from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { axiosi } from '../../config/Axios';\n\nconst AuthPage = () => {\n    // Toggle between Login (false) and Register (true)\n    const [showRegister, setShowRegister] = useState(false);\n    const navigate = useNavigate();\n\n    // ----- Login State -----\n    const [loginEmail, setLoginEmail] = useState('');\n    const [loginPassword, setLoginPassword] = useState('');\n    const [loginError, setLoginError] = useState('');\n\n    // ----- Register State -----\n    const [name, setName] = useState('');\n    const [regEmail, setRegEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [phone, setPhone] = useState('');\n    const [address, setAddress] = useState('');\n    const [registerError, setRegisterError] = useState('');\n\n    // ----- Handlers -----\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        setLoginError('');\n        try {\n            const response = await axiosi.post('/auth/login', {\n                email: loginEmail,\n                password: loginPassword,\n            });\n            if (response.status === 200) {\n                localStorage.setItem('username', response.data.user.name);\n                navigate('/account');\n            }\n        } catch (err) {\n            setLoginError(err.response?.data?.message || 'Invalid login credentials');\n        }\n    };\n\n    const handleRegister = async (e) => {\n        e.preventDefault();\n        setRegisterError('');\n        if (password !== confirmPassword) {\n            setRegisterError('Passwords do not match');\n            return;\n        }\n        try {\n            const response = await axiosi.post('/auth/register', {\n                name,\n                email: regEmail,\n                password,\n                phone,\n                address,\n            });\n            if (response.status === 201) {\n                navigate('/login'); // Or toggle back to login if desired\n            }\n        } catch (err) {\n            setRegisterError(err.response?.data?.message || 'Registration failed');\n        }\n    };\n\n    const togglePanel = () => {\n        setShowRegister((prev) => !prev);\n    };\n\n    return (\n        <Box\n            sx={{\n                position: 'relative',\n                width: '100%',\n                minHeight: '100vh',\n                backgroundImage: 'url(https://source.unsplash.com/random/1600x900?banking)',\n                backgroundSize: 'cover',\n                backgroundPosition: 'center',\n            }}\n        >\n            {/* Container for the two fixed panels */}\n            <Box sx={{ display: 'flex', height: '100%' }}>\n                {/* ----- Login Panel (Left) ----- */}\n                <Box\n                    sx={{\n                        width: '50%',\n                        position: 'relative',\n                        // When login is active, place it above the overlay; when register is active, lower it.\n                        zIndex: showRegister ? 1 : 3,\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                    }}\n                >\n                    <Box\n                        sx={{\n                            width: '80%',\n                            maxWidth: 400,\n                            backgroundColor: 'rgba(255,255,255,0.8)',\n                            p: 4,\n                            borderRadius: 3,\n                            boxShadow: 5,\n                        }}\n                    >\n                        <Typography variant=\"h5\" sx={{ mb: 2, textAlign: 'center' }}>\n                            Login\n                        </Typography>\n                        <form onSubmit={handleLogin}>\n                            <TextField\n                                label=\"Email\"\n                                variant=\"outlined\"\n                                fullWidth\n                                margin=\"normal\"\n                                type=\"email\"\n                                value={loginEmail}\n                                onChange={(e) => setLoginEmail(e.target.value)}\n                                required\n                            />\n                            <TextField\n                                label=\"Password\"\n                                variant=\"outlined\"\n                                fullWidth\n                                margin=\"normal\"\n                                type=\"password\"\n                                value={loginPassword}\n                                onChange={(e) => setLoginPassword(e.target.value)}\n                                required\n                            />\n                            {loginError && (\n                                <Typography variant=\"body2\" color=\"error\" sx={{ mt: 2 }}>\n                                    {loginError}\n                                </Typography>\n                            )}\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                fullWidth\n                                sx={{ mt: 2 }}\n                            >\n                                Login\n                            </Button>\n                        </form>\n                        <Typography variant=\"body2\" sx={{ mt: 2, textAlign: 'center' }}>\n                            Don't have an account?{' '}\n                            <Link onClick={togglePanel} sx={{ cursor: 'pointer' }}>\n                                Register here\n                            </Link>\n                        </Typography>\n                    </Box>\n                </Box>\n\n                {/* ----- Register Panel (Right) ----- */}\n                <Box\n                    sx={{\n                        width: '50%',\n                        position: 'relative',\n                        // When register is active, place it above the overlay; when login is active, lower it.\n                        zIndex: showRegister ? 3 : 1,\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                    }}\n                >\n                    <Box\n                        sx={{\n                            width: '80%',\n                            maxWidth: 400,\n                            backgroundColor: 'rgba(255,255,255,0.8)',\n                            p: 4,\n                            borderRadius: 3,\n                            boxShadow: 5,\n                            transition: '1s'\n                        }}\n                    >\n                        <Typography variant=\"h5\" sx={{ mb: 2, textAlign: 'center' }}>\n                            Register\n                        </Typography>\n                        <form onSubmit={handleRegister}>\n                            <TextField\n                                label=\"Full Name\"\n                                variant=\"outlined\"\n                                fullWidth\n                                margin=\"normal\"\n                                type=\"text\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                                required\n                            />\n                            <TextField\n                                label=\"Email\"\n                                variant=\"outlined\"\n                                fullWidth\n                                margin=\"normal\"\n                                type=\"email\"\n                                value={regEmail}\n                                onChange={(e) => setRegEmail(e.target.value)}\n                                required\n                            />\n                            <TextField\n                                label=\"Password\"\n                                variant=\"outlined\"\n                                fullWidth\n                                margin=\"normal\"\n                                type=\"password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                                required\n                            />\n                            <TextField\n                                label=\"Confirm Password\"\n                                variant=\"outlined\"\n                                fullWidth\n                                margin=\"normal\"\n                                type=\"password\"\n                                value={confirmPassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                                required\n                            />\n                            <TextField\n                                label=\"Phone\"\n                                variant=\"outlined\"\n                                fullWidth\n                                margin=\"normal\"\n                                type=\"tel\"\n                                value={phone}\n                                onChange={(e) => setPhone(e.target.value)}\n                                required\n                            />\n                            <TextField\n                                label=\"Address\"\n                                variant=\"outlined\"\n                                fullWidth\n                                margin=\"normal\"\n                                type=\"text\"\n                                value={address}\n                                onChange={(e) => setAddress(e.target.value)}\n                                required\n                            />\n                            {registerError && (\n                                <Typography variant=\"body2\" color=\"error\" sx={{ mt: 2 }}>\n                                    {registerError}\n                                </Typography>\n                            )}\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                fullWidth\n                                sx={{ mt: 2 }}\n                            >\n                                Register\n                            </Button>\n                        </form>\n                        <Typography variant=\"body2\" sx={{ mt: 2, textAlign: 'center' }}>\n                            Already have an account?{' '}\n                            <Link onClick={togglePanel} sx={{ cursor: 'pointer' }}>\n                                Login here\n                            </Link>\n                        </Typography>\n                    </Box>\n                </Box>\n            </Box>\n\n            {/* ----- Blue Overlay Panel ----- */}\n            <Box\n                sx={{\n                    position: 'absolute',\n                    top: 0,\n                    // When registering, place the overlay over the left (login) panel;\n                    // otherwise, cover the right (register) panel.\n                    left: showRegister ? 0 : '50%',\n                    width: '50%',\n                    height: '100%',\n                    backgroundColor: 'rgba(55,78,232,0.99)',\n                    transition: 'left 0.7s ease-in-out',\n                    zIndex: 2,\n                }}\n            />\n        </Box>\n    );\n};\n\nexport default AuthPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}