{"ast":null,"code":"var _jsxFileName = \"/Users/yanmeiri/Library/Mobile Documents/com~apple~CloudDocs/Bank/frontend/src/components/auth/NewLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, TextField, Button, Link } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { axiosi } from '../../config/Axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  // Toggle between Login (false) and Register (true)\n  const [showRegister, setShowRegister] = useState(false);\n  // State to control the fade in of the forms\n  const [fadeIn, setFadeIn] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Check the URL on mount (and when it changes) to determine which panel to show\n  useEffect(() => {\n    if (location.pathname === '/register') {\n      setShowRegister(true);\n    } else {\n      setShowRegister(false);\n    }\n  }, [location]);\n\n  // ----- Login State -----\n  const [loginEmail, setLoginEmail] = useState('');\n  const [loginPassword, setLoginPassword] = useState('');\n  const [loginError, setLoginError] = useState('');\n\n  // ----- Register State -----\n  const [name, setName] = useState('');\n  const [regEmail, setRegEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [address, setAddress] = useState('');\n  const [registerError, setRegisterError] = useState('');\n\n  // When the component mounts, delay the fade in of the forms\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setFadeIn(true);\n    }, 500); // Adjust delay as needed (here, 500ms)\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Handlers remain unchanged\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoginError('');\n    try {\n      const response = await axiosi.post('/auth/login', {\n        email: loginEmail,\n        password: loginPassword\n      });\n      if (response.status === 200) {\n        localStorage.setItem('username', response.data.user.name);\n        navigate('/account');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setLoginError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Invalid login credentials');\n    }\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    setRegisterError('');\n    if (password !== confirmPassword) {\n      setRegisterError('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await axiosi.post('/auth/register', {\n        name,\n        email: regEmail,\n        password,\n        phone,\n        address\n      });\n      if (response.status === 201) {\n        navigate('/login'); // Or switch panels as needed\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setRegisterError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Registration failed');\n    }\n  };\n  const togglePanel = () => {\n    setShowRegister(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative',\n      width: '100%',\n      minHeight: '100vh',\n      backgroundImage: 'url(https://source.unsplash.com/random/1600x900?banking)',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        opacity: fadeIn ? 1 : 0,\n        transition: 'opacity 0.6s ease-in-out'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          height: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '50%',\n            position: 'relative',\n            zIndex: showRegister ? 1 : 3,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            transition: 'opacity 10s ease-in-out'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '80%',\n              maxWidth: 400,\n              backgroundColor: 'rgba(255,255,255,0.8)',\n              p: 4,\n              borderRadius: 3,\n              boxShadow: 5,\n              transition: 'opacity 10s ease-in-out'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              sx: {\n                mb: 2,\n                textAlign: 'center'\n              },\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleLogin,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Email\",\n                variant: \"outlined\",\n                fullWidth: true,\n                margin: \"normal\",\n                type: \"email\",\n                value: loginEmail,\n                onChange: e => setLoginEmail(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Password\",\n                variant: \"outlined\",\n                fullWidth: true,\n                margin: \"normal\",\n                type: \"password\",\n                value: loginPassword,\n                onChange: e => setLoginPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this), loginError && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"error\",\n                sx: {\n                  mt: 2\n                },\n                children: loginError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                sx: {\n                  mt: 2\n                },\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mt: 2,\n                textAlign: 'center'\n              },\n              children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                onClick: togglePanel,\n                sx: {\n                  cursor: 'pointer'\n                },\n                children: \"Register here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '50%',\n            position: 'relative',\n            zIndex: showRegister ? 3 : 1,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '80%',\n              maxWidth: 400,\n              backgroundColor: 'rgba(255,255,255,0.8)',\n              p: 4,\n              borderRadius: 3,\n              boxShadow: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              sx: {\n                mb: 2,\n                textAlign: 'center'\n              },\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleRegister,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Full Name\",\n                variant: \"outlined\",\n                fullWidth: true,\n                margin: \"normal\",\n                type: \"text\",\n                value: name,\n                onChange: e => setName(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Email\",\n                variant: \"outlined\",\n                fullWidth: true,\n                margin: \"normal\",\n                type: \"email\",\n                value: regEmail,\n                onChange: e => setRegEmail(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Password\",\n                variant: \"outlined\",\n                fullWidth: true,\n                margin: \"normal\",\n                type: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Confirm Password\",\n                variant: \"outlined\",\n                fullWidth: true,\n                margin: \"normal\",\n                type: \"password\",\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Phone\",\n                variant: \"outlined\",\n                fullWidth: true,\n                margin: \"normal\",\n                type: \"tel\",\n                value: phone,\n                onChange: e => setPhone(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Address\",\n                variant: \"outlined\",\n                fullWidth: true,\n                margin: \"normal\",\n                type: \"text\",\n                value: address,\n                onChange: e => setAddress(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this), registerError && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"error\",\n                sx: {\n                  mt: 2\n                },\n                children: registerError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                sx: {\n                  mt: 2\n                },\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mt: 2,\n                textAlign: 'center'\n              },\n              children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                onClick: togglePanel,\n                sx: {\n                  cursor: 'pointer'\n                },\n                children: \"Login here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: 0,\n          left: showRegister ? 0 : '50%',\n          width: '50%',\n          height: '100%',\n          backgroundColor: 'rgb(25,59,200)',\n          transition: 'left 0.6s ease-in-out',\n          zIndex: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthPage, \"vOmvEhDy+B9gpUny/JcKNm6xFOU=\", true, function () {\n  return [useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","TextField","Button","Link","useNavigate","axiosi","jsxDEV","_jsxDEV","AuthPage","_s","showRegister","setShowRegister","fadeIn","setFadeIn","navigate","location","useLocation","pathname","loginEmail","setLoginEmail","loginPassword","setLoginPassword","loginError","setLoginError","name","setName","regEmail","setRegEmail","password","setPassword","confirmPassword","setConfirmPassword","phone","setPhone","address","setAddress","registerError","setRegisterError","timer","setTimeout","clearTimeout","handleLogin","e","preventDefault","response","post","email","status","localStorage","setItem","data","user","err","_err$response","_err$response$data","message","handleRegister","_err$response2","_err$response2$data","togglePanel","prev","sx","position","width","minHeight","backgroundImage","backgroundSize","backgroundPosition","children","top","left","height","opacity","transition","display","zIndex","justifyContent","alignItems","maxWidth","backgroundColor","p","borderRadius","boxShadow","variant","mb","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","fullWidth","margin","type","value","onChange","target","required","color","mt","onClick","cursor","_c","$RefreshReg$"],"sources":["/Users/yanmeiri/Library/Mobile Documents/com~apple~CloudDocs/Bank/frontend/src/components/auth/NewLogin.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    Box,\n    Typography,\n    TextField,\n    Button,\n    Link,\n} from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { axiosi } from '../../config/Axios';\n\nconst AuthPage = () => {\n    // Toggle between Login (false) and Register (true)\n    const [showRegister, setShowRegister] = useState(false);\n    // State to control the fade in of the forms\n    const [fadeIn, setFadeIn] = useState(false);\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    // Check the URL on mount (and when it changes) to determine which panel to show\n    useEffect(() => {\n        if (location.pathname === '/register') {\n            setShowRegister(true);\n        } else {\n            setShowRegister(false);\n        }\n    }, [location]);\n    \n    // ----- Login State -----\n    const [loginEmail, setLoginEmail] = useState('');\n    const [loginPassword, setLoginPassword] = useState('');\n    const [loginError, setLoginError] = useState('');\n\n    // ----- Register State -----\n    const [name, setName] = useState('');\n    const [regEmail, setRegEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [phone, setPhone] = useState('');\n    const [address, setAddress] = useState('');\n    const [registerError, setRegisterError] = useState('');\n\n    // When the component mounts, delay the fade in of the forms\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setFadeIn(true);\n        }, 500); // Adjust delay as needed (here, 500ms)\n        return () => clearTimeout(timer);\n    }, []);\n\n    // Handlers remain unchanged\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        setLoginError('');\n        try {\n            const response = await axiosi.post('/auth/login', {\n                email: loginEmail,\n                password: loginPassword,\n            });\n            if (response.status === 200) {\n                localStorage.setItem('username', response.data.user.name);\n                navigate('/account');\n            }\n        } catch (err) {\n            setLoginError(err.response?.data?.message || 'Invalid login credentials');\n        }\n    };\n\n    const handleRegister = async (e) => {\n        e.preventDefault();\n        setRegisterError('');\n        if (password !== confirmPassword) {\n            setRegisterError('Passwords do not match');\n            return;\n        }\n        try {\n            const response = await axiosi.post('/auth/register', {\n                name,\n                email: regEmail,\n                password,\n                phone,\n                address,\n            });\n            if (response.status === 201) {\n                navigate('/login'); // Or switch panels as needed\n            }\n        } catch (err) {\n            setRegisterError(err.response?.data?.message || 'Registration failed');\n        }\n    };\n\n    const togglePanel = () => {\n        setShowRegister((prev) => !prev);\n    };\n\n    return (\n        <Box\n            sx={{\n                position: 'relative',\n                width: '100%',\n                minHeight: '100vh',\n                backgroundImage: 'url(https://source.unsplash.com/random/1600x900?banking)',\n                backgroundSize: 'cover',\n                backgroundPosition: 'center',\n            }}\n        >\n            {/* Container for forms with fade-in transition */}\n            <Box\n                sx={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    opacity: fadeIn ? 1 : 0,\n                    transition: 'opacity 0.6s ease-in-out',\n                }}\n            >\n                {/* Container for the two fixed panels */}\n                <Box sx={{ display: 'flex', height: '100%'}}>\n                    {/* ----- Login Panel (Left) ----- */}\n                    <Box\n                        sx={{\n                            width: '50%',\n                            position: 'relative',\n                            zIndex: showRegister ? 1 : 3,\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            transition: 'opacity 10s ease-in-out',\n                        }}\n                    >\n                        <Box\n                            sx={{\n                                width: '80%',\n                                maxWidth: 400,\n                                backgroundColor: 'rgba(255,255,255,0.8)',\n                                p: 4,\n                                borderRadius: 3,\n                                boxShadow: 5,\n                                transition: 'opacity 10s ease-in-out',\n                            }}\n                        >\n                            <Typography variant=\"h5\" sx={{ mb: 2, textAlign: 'center' }}>\n                                Login\n                            </Typography>\n                            <form onSubmit={handleLogin}>\n                                <TextField\n                                    label=\"Email\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    margin=\"normal\"\n                                    type=\"email\"\n                                    value={loginEmail}\n                                    onChange={(e) => setLoginEmail(e.target.value)}\n                                    required\n                                />\n                                <TextField\n                                    label=\"Password\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    margin=\"normal\"\n                                    type=\"password\"\n                                    value={loginPassword}\n                                    onChange={(e) => setLoginPassword(e.target.value)}\n                                    required\n                                />\n                                {loginError && (\n                                    <Typography variant=\"body2\" color=\"error\" sx={{ mt: 2 }}>\n                                        {loginError}\n                                    </Typography>\n                                )}\n                                <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    sx={{ mt: 2 }}\n                                >\n                                    Login\n                                </Button>\n                            </form>\n                            <Typography variant=\"body2\" sx={{ mt: 2, textAlign: 'center' }}>\n                                Don't have an account?{' '}\n                                <Link onClick={togglePanel} sx={{ cursor: 'pointer' }}>\n                                    Register here\n                                </Link>\n                            </Typography>\n                        </Box>\n                    </Box>\n\n                    {/* ----- Register Panel (Right) ----- */}\n                    <Box\n                        sx={{\n                            width: '50%',\n                            position: 'relative',\n                            zIndex: showRegister ? 3 : 1,\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Box\n                            sx={{\n                                width: '80%',\n                                maxWidth: 400,\n                                backgroundColor: 'rgba(255,255,255,0.8)',\n                                p: 4,\n                                borderRadius: 3,\n                                boxShadow: 5,\n                            }}\n                        >\n                            <Typography variant=\"h5\" sx={{ mb: 2, textAlign: 'center' }}>\n                                Register\n                            </Typography>\n                            <form onSubmit={handleRegister}>\n                                <TextField\n                                    label=\"Full Name\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    margin=\"normal\"\n                                    type=\"text\"\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                    required\n                                />\n                                <TextField\n                                    label=\"Email\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    margin=\"normal\"\n                                    type=\"email\"\n                                    value={regEmail}\n                                    onChange={(e) => setRegEmail(e.target.value)}\n                                    required\n                                />\n                                <TextField\n                                    label=\"Password\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    margin=\"normal\"\n                                    type=\"password\"\n                                    value={password}\n                                    onChange={(e) => setPassword(e.target.value)}\n                                    required\n                                />\n                                <TextField\n                                    label=\"Confirm Password\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    margin=\"normal\"\n                                    type=\"password\"\n                                    value={confirmPassword}\n                                    onChange={(e) => setConfirmPassword(e.target.value)}\n                                    required\n                                />\n                                <TextField\n                                    label=\"Phone\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    margin=\"normal\"\n                                    type=\"tel\"\n                                    value={phone}\n                                    onChange={(e) => setPhone(e.target.value)}\n                                    required\n                                />\n                                <TextField\n                                    label=\"Address\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    margin=\"normal\"\n                                    type=\"text\"\n                                    value={address}\n                                    onChange={(e) => setAddress(e.target.value)}\n                                    required\n                                />\n                                {registerError && (\n                                    <Typography variant=\"body2\" color=\"error\" sx={{ mt: 2 }}>\n                                        {registerError}\n                                    </Typography>\n                                )}\n                                <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    sx={{ mt: 2 }}\n                                >\n                                    Register\n                                </Button>\n                            </form>\n                            <Typography variant=\"body2\" sx={{ mt: 2, textAlign: 'center' }}>\n                                Already have an account?{' '}\n                                <Link onClick={togglePanel} sx={{ cursor: 'pointer' }}>\n                                    Login here\n                                </Link>\n                            </Typography>\n                        </Box>\n                    </Box>\n                </Box>\n\n                {/* ----- Blue Overlay Panel (Fades in with the rest) ----- */}\n                <Box\n                    sx={{\n                        position: 'absolute',\n                        top: 0,\n                        left: showRegister ? 0 : '50%',\n                        width: '50%',\n                        height: '100%',\n                        backgroundColor: 'rgb(25,59,200)',\n                        transition: 'left 0.6s ease-in-out',\n                        zIndex: 2,\n                    }}\n                />\n            </Box>\n        </Box>\n    );\n};\n\nexport default AuthPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}